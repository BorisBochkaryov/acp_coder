%% Generated by the Erlang ASN.1 compiler version:4.0.3
%% Purpose: Erlang record definitions for each named and unnamed
%% SEQUENCE and SET, and macro definitions for each value
%% definition,in module INCS3opsargs



-ifndef(_INCS3OPSARGS_HRL_).
-define(_INCS3OPSARGS_HRL_, true).

-record('CancelFailed',{
problem, operation}).

-record('MiscCallInfo',{
messageType, dpAssignment = asn1_NOVALUE}).

-record('ActivateServiceFilteringArg',{
filteredCallTreatment, filteringCharacteristics, filteringTimeOut, filteringCriteria, startTime = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('AnalysedInformationArg',{
dpSpecificCommonParameters, dialledDigits = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, callingFacilityGroup = asn1_NOVALUE, callingFacilityGroupMember = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, prefix = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, routeList = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, featureCode = asn1_NOVALUE, accessCode = asn1_NOVALUE, carrier = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('AnalyseInformationArg',{
destinationRoutingAddress, alertingPattern = asn1_NOVALUE, iSDNAccessRelatedInformation = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, extensions = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, callingPartysCategory = asn1_NOVALUE, calledPartyNumber = asn1_NOVALUE, chargeNumber = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, carrier = asn1_NOVALUE, serviceInteractionIndicators = asn1_NOVALUE, iNServiceCompatibilityResponse = asn1_NOVALUE, forwardGVNS = asn1_NOVALUE, backwardGVNS = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE, correlationID = asn1_NOVALUE, scfID = asn1_NOVALUE, callSegmentID = asn1_NOVALUE, legToBeCreated = asn1_NOVALUE}).

-record('ApplyChargingArg',{
aChBillingChargingCharacteristics, partyToCharge = asn1_NOVALUE, extensions = asn1_NOVALUE, releaseIndication = asn1_NOVALUE, releaseCause = asn1_NOVALUE}).

-record('AssistRequestInstructionsArg',{
correlationID, iPAvailable = asn1_NOVALUE, iPSSPCapabilities = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('AuthorizeTerminationArg',{
alertingPattern = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, destinationNumberRoutingAddress = asn1_NOVALUE, displayInformation = asn1_NOVALUE, iSDNAccessRelatedInformation = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, iNServiceCompatibilityResponse = asn1_NOVALUE, forwardGVNS = asn1_NOVALUE, backwardGVNS = asn1_NOVALUE, legID = asn1_NOVALUE}).

-record('CallGapArg',{
gapCriteria, gapIndicators, controlType = asn1_NOVALUE, gapTreatment = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('CallInformationReportArg',{
requestedInformationList, correlationID = asn1_NOVALUE, extensions = asn1_NOVALUE, legID = asn1_NOVALUE, lastEventIndicator = asn1_DEFAULT}).

-record('CallInformationRequestArg',{
requestedInformationTypeList, correlationID = asn1_NOVALUE, extensions = asn1_NOVALUE, legID = asn1_NOVALUE}).

-record('CancelArg_callSegmentToCancel',{
invokeID, callSegmentID}).

-record('CancelStatusReportRequestArg',{
resourceID = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('CollectedInformationArg',{
dpSpecificCommonParameters, dialledDigits = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, callingFacilityGroup = asn1_NOVALUE, callingFacilityGroupMember = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, prefix = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, featureCode = asn1_NOVALUE, accessCode = asn1_NOVALUE, carrier = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('CollectInformationArg',{
alertingPattern = asn1_NOVALUE, numberingPlan = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, dialledDigits = asn1_NOVALUE, serviceInteractionIndicators = asn1_NOVALUE, iNServiceCompatibilityResponse = asn1_NOVALUE, forwardGVNS = asn1_NOVALUE, backwardGVNS = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE, callSegmentID = asn1_NOVALUE, legToBeCreated = asn1_NOVALUE}).

-record('ConnectArg',{
destinationRoutingAddress, alertingPattern = asn1_NOVALUE, correlationID = asn1_NOVALUE, cutAndPaste = asn1_NOVALUE, forwardingCondition = asn1_NOVALUE, iSDNAccessRelatedInformation = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, routeList = asn1_NOVALUE, scfID = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, carrier = asn1_NOVALUE, serviceInteractionIndicators = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, callingPartysCategory = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, displayInformation = asn1_NOVALUE, forwardCallIndicators = asn1_NOVALUE, genericNumbers = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE, iNServiceCompatibilityResponse = asn1_NOVALUE, forwardGVNS = asn1_NOVALUE, backwardGVNS = asn1_NOVALUE, chargeNumber = asn1_NOVALUE, callSegmentID = asn1_NOVALUE, legToBeCreated = asn1_NOVALUE, sDSSinformation = asn1_NOVALUE, calledDirectoryNumber = asn1_NOVALUE, aTMTrafficDescriptor = asn1_NOVALUE, bearerCapability = asn1_NOVALUE, qoSParameter = asn1_NOVALUE}).

-record('ConnectToResourceArg',{
resourceAddress, extensions = asn1_NOVALUE, serviceInteractionIndicators = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE, uSIServiceIndicator = asn1_NOVALUE, uSIInformation = asn1_NOVALUE}).

-record('ConnectToResourceArg_resourceAddress_ipAddressAndLegID',{
ipRoutingAddress, legID}).

-record('ConnectToResourceArg_resourceAddress_ipAddressAndCallSegment',{
ipRoutingAddress, callSegmentID}).

-record('ContinueWithArgumentArg',{
legorCSID = asn1_DEFAULT, alertingPattern = asn1_NOVALUE, genericName = asn1_NOVALUE, iNServiceCompatibilityResponse = asn1_NOVALUE, forwardGVNS = asn1_NOVALUE, backwardGVNS = asn1_NOVALUE, extensions = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE, sDSSinformation = asn1_NOVALUE}).

-record('CreateCallSegmentAssociationArg',{
extensions = asn1_NOVALUE}).

-record('CreateCallSegmentAssociationResultArg',{
newCallSegmentAssociation}).

-record('CreateOrRemoveTriggerDataArg',{
createOrRemove, dPName = asn1_NOVALUE, triggerDPType, serviceKey = asn1_NOVALUE, profileIdentifier = asn1_NOVALUE, triggerData = asn1_NOVALUE, defaultFaultHandling = asn1_NOVALUE, tDPIdentifier = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('CreateOrRemoveTriggerDataResultArg',{
triggerStatus, tDPIdentifier, registratorIdentifier = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('DisconnectForwardConnectionWithArgumentArg',{
partyToDisconnect, extensions = asn1_NOVALUE, uSIServiceIndicator = asn1_NOVALUE, uSIInformation = asn1_NOVALUE}).

-record('DisconnectLegArg',{
legToBeReleased, releaseCause = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('EntityReleasedArg_cSFailure',{
callSegmentID, reason = asn1_NOVALUE, cause = asn1_NOVALUE}).

-record('EntityReleasedArg_bCSMFailure',{
legID, reason = asn1_NOVALUE, cause = asn1_NOVALUE}).

-record('EstablishTemporaryConnectionArg',{
assistingSSPIPRoutingAddress, correlationID = asn1_NOVALUE, partyToConnect = asn1_NOVALUE, scfID = asn1_NOVALUE, extensions = asn1_NOVALUE, carrier = asn1_NOVALUE, serviceInteractionIndicators = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE}).

-record('EventNotificationChargingArg',{
eventTypeCharging, eventSpecificInformationCharging = asn1_NOVALUE, legID = asn1_NOVALUE, extensions = asn1_NOVALUE, monitorMode}).

-record('EventReportBCSMArg',{
eventTypeBCSM, bcsmEventCorrelationID = asn1_NOVALUE, eventSpecificInformationBCSM = asn1_NOVALUE, legID = asn1_NOVALUE, miscCallInfo = asn1_DEFAULT, extensions = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('EventReportFacilityArg',{
componentType = asn1_NOVALUE, component = asn1_NOVALUE, legID = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('FacilitySelectedAndAvailableArg',{
dpSpecificCommonParameters, calledPartyBusinessGroupID = asn1_NOVALUE, calledPartySubaddress = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, routeList = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('InitialDPArg',{
serviceKey = asn1_NOVALUE, dialledDigits = asn1_NOVALUE, calledPartyNumber = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartysCategory = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, cGEncountered = asn1_NOVALUE, iPSSPCapabilities = asn1_NOVALUE, iPAvailable = asn1_NOVALUE, locationNumber = asn1_NOVALUE, miscCallInfo = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, serviceProfileIdentifier = asn1_NOVALUE, terminalType = asn1_NOVALUE, extensions = asn1_NOVALUE, triggerType = asn1_NOVALUE, highLayerCompatibility = asn1_NOVALUE, serviceInteractionIndicators = asn1_NOVALUE, additionalCallingPartyNumber = asn1_NOVALUE, forwardCallIndicators = asn1_NOVALUE, bearerCapability = asn1_NOVALUE, eventTypeBCSM = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, cause = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE, iSDNAccessRelatedInformation = asn1_NOVALUE, iNServiceCompatibilityIndication = asn1_NOVALUE, genericNumbers = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE, forwardGVNS = asn1_NOVALUE, createdCallSegmentAssociation = asn1_NOVALUE, uSIServiceIndicator = asn1_NOVALUE, uSIInformation = asn1_NOVALUE, carrier = asn1_NOVALUE, cCSS = asn1_NOVALUE, vPNIndicator = asn1_NOVALUE, cNInfo = asn1_NOVALUE, callReference = asn1_NOVALUE, routingNumber = asn1_NOVALUE, aTMTrafficDescriptor = asn1_NOVALUE, qoSParameter = asn1_NOVALUE, callingGeodeticLocation = asn1_NOVALUE}).

-record('InitiateCallAttemptArg',{
destinationRoutingAddress, alertingPattern = asn1_NOVALUE, iSDNAccessRelatedInformation = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, serviceInteractionIndicators = asn1_NOVALUE, callingPartyNumber = asn1_NOVALUE, legToBeCreated = asn1_DEFAULT, newCallSegment = asn1_DEFAULT, iNServiceCompatibilityResponse = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE, correlationID = asn1_NOVALUE, scfID = asn1_NOVALUE, carrier = asn1_NOVALUE, callReference = asn1_NOVALUE, calledDirectoryNumber = asn1_NOVALUE}).

-record('ManageTriggerDataArg',{
actionIndicator, triggerDataIdentifier, registratorIdentifier = asn1_NOVALUE, extensions = asn1_NOVALUE, tDPIdentifier = asn1_NOVALUE}).

-record('ManageTriggerDataResultArg_oneTriggerResult',{
actionPerformed, extensions = asn1_NOVALUE}).

-record('ManageTriggerDataResultArg_severalTriggerResult',{
results, extensions = asn1_NOVALUE}).

-record('MergeCallSegmentsArg',{
sourceCallSegment, targetCallSegment = asn1_DEFAULT, extensions = asn1_NOVALUE}).

-record('MoveCallSegmentsArg',{
targetCallSegmentAssociation, callSegments, legs, extensions = asn1_NOVALUE}).

-record('MoveCallSegmentsArg_callSegments_SEQOF',{
sourceCallSegment = asn1_DEFAULT, newCallSegment}).

-record('MoveLegArg',{
legIDToMove, targetCallSegment = asn1_DEFAULT, extensions = asn1_NOVALUE}).

-record('OAbandonArg',{
dpSpecificCommonParameters, callSegmentID, releaseCause = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('OAnswerArg',{
dpSpecificCommonParameters, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, callingFacilityGroup = asn1_NOVALUE, callingFacilityGroupMember = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, routeList = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('OCalledPartyBusyArg',{
dpSpecificCommonParameters, busyCause = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, callingFacilityGroup = asn1_NOVALUE, callingFacilityGroupMember = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, prefix = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, routeList = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, carrier = asn1_NOVALUE}).

-record('ODisconnectArg',{
dpSpecificCommonParameters, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, callingFacilityGroup = asn1_NOVALUE, callingFacilityGroupMember = asn1_NOVALUE, releaseCause = asn1_NOVALUE, routeList = asn1_NOVALUE, extensions = asn1_NOVALUE, carrier = asn1_NOVALUE, connectTime = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('MidCallArg',{
dpSpecificCommonParameters, calledPartyBusinessGroupID = asn1_NOVALUE, calledPartySubaddress = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, featureRequestIndicator = asn1_NOVALUE, extensions = asn1_NOVALUE, carrier = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('ONoAnswerArg',{
dpSpecificCommonParameters, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, callingFacilityGroup = asn1_NOVALUE, callingFacilityGroupMember = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, prefix = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, routeList = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, carrier = asn1_NOVALUE}).

-record('OriginationAttemptArg',{
dpSpecificCommonParameters, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, callingFacilityGroup = asn1_NOVALUE, callingFacilityGroupMember = asn1_NOVALUE, carrier = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componenttCorrelationID = asn1_NOVALUE}).

-record('OriginationAttemptAuthorizedArg',{
dpSpecificCommonParameters, dialledDigits = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, callingFacilityGroup = asn1_NOVALUE, callingFacilityGroupMember = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, carrier = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('OSuspendedArg',{
dpSpecificCommonParameters, legID = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('ReconnectArg',{
notificationDuration = asn1_NOVALUE, alertingPattern = asn1_NOVALUE, displayInformation = asn1_NOVALUE, extensions = asn1_NOVALUE, callSegmentID = asn1_NOVALUE}).

-record('ReleaseCallArg_callSegmentToRelease',{
callSegment, releaseCause = asn1_NOVALUE, forcedRelease = asn1_DEFAULT}).

-record('ReleaseCallArg_allCallSegments',{
releaseCause = asn1_NOVALUE, timeToRelease = asn1_NOVALUE, forcedRelease = asn1_DEFAULT}).

-record('ReportUTSIArg',{
uSIServiceIndicator, legID = asn1_DEFAULT, uSIInformation, extensions = asn1_NOVALUE}).

-record('RequestCurrentStatusReportResultArg',{
resourceStatus, resourceID = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('RequestEveryStatusChangeReportArg',{
resourceID, correlationID = asn1_NOVALUE, monitorDuration = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('RequestFirstStatusMatchReportArg',{
resourceID = asn1_NOVALUE, resourceStatus = asn1_NOVALUE, correlationID = asn1_NOVALUE, monitorDuration = asn1_NOVALUE, extensions = asn1_NOVALUE, bearerCapability = asn1_NOVALUE}).

-record('RequestReportBCSMEventArg',{
bcsmEvents, bcsmEventCorrelationID = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('RequestReportFacilityEventArg',{
componentTypes, legID = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE, monitorDuration, extensions = asn1_NOVALUE}).

-record('RequestReportUTSIArg',{
requestedUTSIList, extensions = asn1_NOVALUE, legID = asn1_DEFAULT}).

-record('ResetTimerArg',{
timerID = asn1_DEFAULT, timervalue, extensions = asn1_NOVALUE, callSegmentID = asn1_NOVALUE}).

-record('RouteSelectFailureArg',{
dpSpecificCommonParameters, dialledDigits = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, callingFacilityGroup = asn1_NOVALUE, callingFacilityGroupMember = asn1_NOVALUE, failureCause = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, prefix = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, routeList = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, carrier = asn1_NOVALUE}).

-record('SelectFacilityArg',{
alertingPattern = asn1_NOVALUE, destinationNumberRoutingAddress = asn1_NOVALUE, iSDNAccessRelatedInformation = asn1_NOVALUE, calledFacilityGroup = asn1_NOVALUE, calledFacilityGroupMember = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, extensions = asn1_NOVALUE, displayInformation = asn1_NOVALUE, serviceInteractionIndicators = asn1_NOVALUE, iNServiceCompatibilityResponse = asn1_NOVALUE, forwardGVNS = asn1_NOVALUE, backwardGVNS = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE, correlationID = asn1_NOVALUE, scfID = asn1_NOVALUE, callSegmentID = asn1_NOVALUE, legToBeCreated = asn1_NOVALUE}).

-record('SelectRouteArg',{
destinationRoutingAddress, alertingPattern = asn1_NOVALUE, correlationID = asn1_NOVALUE, iSDNAccessRelatedInformation = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, routeList = asn1_NOVALUE, scfID = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, carrier = asn1_NOVALUE, serviceInteractionIndicators = asn1_NOVALUE, iNServiceCompatibilityResponse = asn1_NOVALUE, forwardGVNS = asn1_NOVALUE, backwardGVNS = asn1_NOVALUE, serviceInteractionIndicatorsTwo = asn1_NOVALUE, callSegmentID = asn1_NOVALUE, legToBeCreated = asn1_NOVALUE}).

-record('SendChargingInformationArg',{
sCIBillingChargingCharacteristics, partyToCharge, extensions = asn1_NOVALUE, nocharge = asn1_NOVALUE}).

-record('SendFacilityInformationArg',{
componentType, legID = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE, component, callProcessingOperationCorrelationID, extensions = asn1_NOVALUE}).

-record('SendSTUIArg',{
uSIServiceIndicator, legID = asn1_DEFAULT, uSIInformation, extensions = asn1_NOVALUE}).

-record('ServiceFilteringResponseArg',{
countersValue, filteringCriteria, extensions = asn1_NOVALUE, responseCondition = asn1_NOVALUE}).

-record('SetServiceProfileArg',{
iNprofiles, extensions = asn1_NOVALUE}).

-record('SplitLegArg',{
legToBeSplit, newCallSegment, extensions = asn1_NOVALUE}).

-record('StatusReportArg',{
resourceStatus = asn1_NOVALUE, correlationID = asn1_NOVALUE, resourceID = asn1_NOVALUE, extensions = asn1_NOVALUE, reportCondition = asn1_NOVALUE}).

-record('TAnswerArg',{
dpSpecificCommonParameters, calledPartyBusinessGroupID = asn1_NOVALUE, calledPartySubaddress = asn1_NOVALUE, calledFacilityGroup = asn1_NOVALUE, calledFacilityGroupMember = asn1_NOVALUE, extensions = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('TBusyArg',{
dpSpecificCommonParameters, busyCause = asn1_NOVALUE, calledPartyBusinessGroupID = asn1_NOVALUE, calledPartySubaddress = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, routeList = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('TDisconnectArg',{
dpSpecificCommonParameters, calledPartyBusinessGroupID = asn1_NOVALUE, calledPartySubaddress = asn1_NOVALUE, calledFacilityGroup = asn1_NOVALUE, calledFacilityGroupMember = asn1_NOVALUE, releaseCause = asn1_NOVALUE, extensions = asn1_NOVALUE, connectTime = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('TermAttemptAuthorizedArg',{
dpSpecificCommonParameters, calledPartyBusinessGroupID = asn1_NOVALUE, calledPartySubaddress = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, routeList = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE}).

-record('TerminationAttemptArg',{
dpSpecificCommonParameters, calledPartyBusinessGroupID = asn1_NOVALUE, calledPartySubaddress = asn1_NOVALUE, callingPartyBusinessGroupID = asn1_NOVALUE, callingPartySubaddress = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, routeList = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('TNoAnswerArg',{
dpSpecificCommonParameters, calledPartyBusinessGroupID = asn1_NOVALUE, calledPartySubaddress = asn1_NOVALUE, calledFacilityGroup = asn1_NOVALUE, calledFacilityGroupMember = asn1_NOVALUE, originalCalledPartyID = asn1_NOVALUE, redirectingPartyID = asn1_NOVALUE, redirectionInformation = asn1_NOVALUE, travellingClassMark = asn1_NOVALUE, extensions = asn1_NOVALUE, componentType = asn1_NOVALUE, component = asn1_NOVALUE, componentCorrelationID = asn1_NOVALUE}).

-record('TSuspendedArg',{
dpSpecificCommonParameters, legID = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('PlayAnnouncementArg',{
informationToSend, disconnectFromIPForbidden = asn1_DEFAULT, requestAnnouncementComplete = asn1_DEFAULT, extensions = asn1_NOVALUE, connectedParty = asn1_NOVALUE}).

-record('PromptAndCollectUserInformationArg',{
collectedInfo, disconnectFromIPForbidden = asn1_DEFAULT, informationToSend = asn1_NOVALUE, extensions = asn1_NOVALUE, callSegmentID = asn1_NOVALUE}).

-record('PromptAndReceiveMessageArg',{
disconnectFromIPForbidden = asn1_DEFAULT, informationToSend = asn1_NOVALUE, extensions = asn1_NOVALUE, subscriberID = asn1_NOVALUE, mailBoxID = asn1_NOVALUE, informationToRecord, media, callSegmentID = asn1_NOVALUE}).

-record('MessageReceivedArg',{
receivedStatus, recordedMessageID = asn1_NOVALUE, recordedMessageUnits = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-record('ScriptCloseArg',{
uIScriptId, uIScriptSpecificInfo = asn1_NOVALUE, extensions = asn1_NOVALUE, callSegmentID = asn1_NOVALUE}).

-record('ScriptEventArg',{
uIScriptId, uIScriptResult = asn1_NOVALUE, extensions = asn1_NOVALUE, callSegmentID = asn1_NOVALUE, lastEventIndicator = asn1_DEFAULT}).

-record('ScriptInformationArg',{
uIScriptId, uIScriptSpecificInfo = asn1_NOVALUE, extensions = asn1_NOVALUE, callSegmentID = asn1_NOVALUE}).

-record('ScriptRunArg',{
uIScriptId, uIScriptSpecificInfo = asn1_NOVALUE, extensions = asn1_NOVALUE, disconnectFromIPForbidden = asn1_DEFAULT, callSegmentID = asn1_NOVALUE}).

-record('SRFCallGapArg',{
sRFgapCriteria, gapIndicators, controlType = asn1_NOVALUE, extensions = asn1_NOVALUE}).

-define('leg1', <<1>>).
-define('leg2', <<2>>).
-endif. %% _INCS3OPSARGS_HRL_
